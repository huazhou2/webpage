{"version":3,"sources":["huazhou_pic.JPG","head.jsx","home.jsx","about.jsx","photos.jsx","stories.jsx","foot.jsx","app.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Head","react_default","a","createElement","className","id","Link","to","Component","Home","style","paddingTop","About","Photos","src","myphoto","alt","width","height","Stories","Foot","App","BrowserRouter","Route","component","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iOCuBzBC,mLAlBb,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIE,GAAG,WACNJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,QAAvB,oBAEHH,EAAAC,EAAAC,cAAA,UACDF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,QAA5B,UAEMH,EAAAC,EAAAC,cAAA,UACNF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,UAAUH,UAAU,QAA7B,WAEMH,EAAAC,EAAAC,cAAA,UACNF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,WAAWH,UAAU,QAA9B,oBAdeI,aCeJC,mLAdX,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAIO,MAAO,CAACC,WAAY,SAAxB,2BAGAV,EAAAC,EAAAC,cAAA,mFAPSK,aCeJI,mLAbX,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAIO,MAAO,CAACC,WAAY,SAAxB,+BAGPV,EAAAC,EAAAC,cAAA,4DAPiBK,8BCcLK,mLAXX,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAIO,MAAO,CAACC,WAAW,SAAvB,qBAGPV,EAAAC,EAAAC,cAAA,OAAKW,IAAKC,IAASC,IAAI,SAASN,MAAO,CAACO,MAAM,QAASC,OAAO,mBAP5CV,aCWNW,mLAVX,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,qCAJYK,aCePY,mLAZb,OACInB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACbH,EAAAC,EAAAC,cAAA,kCAGAF,EAAAC,EAAAC,cAAA,6CAPYK,6BC2BJa,mLAnBb,OACApB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACCrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAChBH,EAAAC,EAAAC,cAAA,UAEKF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQC,UAAWxB,IAFxB,KAGEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACXH,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOE,OAAK,EAACC,KAAK,IAAIF,UAAWf,IACjCR,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOG,KAAK,SAASF,UAAWZ,IAChCX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOG,KAAK,UAAUF,UAAWX,IACjCZ,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOG,KAAK,WAAWF,UAAWL,KACrClB,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQC,UAAWJ,cAdPZ,aCGEmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAQhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASC,SAASC,eAAe,SD2H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4519fe6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/huazhou_pic.1734ef74.JPG\";","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Head extends Component { \n\trender () {\n\t\treturn (\n      <ul className=\"header\">\n\t      <li id='header1'>\n\t\t      <Link to=\"/\" className='link' >Hua Zhou's Home</Link>\n          </li>\n\t\t\t  <li>\n\t\t  <Link to=\"/about\" className='link' >About</Link>\n          </li>\n          <li>\n\t\t  <Link to=\"/photos\" className='link' >Photos</Link>\n          </li>\n          <li>\n\t\t  <Link to=\"/stories\" className='link' >Stories</Link>\n          </li>\n      </ul>\n\n    )}};\n\nexport default Head;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"maintext\">\n          <h1 style={{paddingTop: '30px'}}>\n\t    This is my home webpage\n\t  </h1>\n          <p>\n            My name is Hua Zhou,now I work at NYU as a research scientist.\n          </p>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"maintext\">\n          <h1 style={{paddingTop: '30px'}}>\n\t    This is something about me. \n          </h1>\n\t  <p>\n           I was born in Shandong Province, China.\n   </p>\n      </div>\n    );\n  }\n}\n\nexport default About; \n","import React, { Component } from 'react';\nimport myphoto from \"./huazhou_pic.JPG\";\n\nclass Photos extends Component {\n  render() {\n    return (\n      <div className=\"maintext\">\n          <h1 style={{paddingTop:'30px'}}>\n\t    Some Photos of me\n          </h1>\n\t  <img src={myphoto} alt='failed' style={{width:'500px', height:'500px'}}></img>\n      </div>\n    );\n  }\n}\n\nexport default Photos; \n","import React, { Component } from 'react';\n\nclass Stories extends Component {\n  render() {\n    return (\n      <div className=\"containter\">\n          <h1>\n\t    this is stories\n          </h1>\n      </div>\n    );\n  }\n}\n\nexport default Stories;\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\n\nclass Foot extends Component { \n\trender () {\n\t\treturn (\n      <ul className=\"footer\">\n\t      <li>\n\t\t      &copy; HuaZhou 2019.03\n          </li>\n\t      <li>\n\t\t    You are the 1st visitor \n          </li>\n      </ul>\n\n    )}};\n\nexport default Foot;\n","import React, {Component} from 'react';\nimport Head from './head.jsx';\nimport Home from './home.jsx';\nimport About from './about.jsx';\nimport Photos from './photos.jsx';\nimport Stories from './stories.jsx';\nimport Foot from './foot.jsx';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nclass App extends Component { \n\trender() {\n\t\treturn(\n  <Router>\n\t  <ul className='mainpage'>\n\t<li>\n        \n      <Route  component={Head} /> </li>\n\t\t\t<li className='mainbody'>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/photos\" component={Photos}/>\n      <Route path=\"/stories\" component={Stories}/></li>\n\t\t\t<li>\n      <Route  component={Foot} /></li>\n      </ul>\n  </Router>\n\t\t)};\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}